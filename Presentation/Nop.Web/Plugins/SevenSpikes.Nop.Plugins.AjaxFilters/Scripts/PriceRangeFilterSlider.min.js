/*
* Copyright 2016 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
* http://www.nop-templates.com/t/licensinginfo
*/

PriceRangeFilterManager = function () { }, function (n, t, i) { function r(t, r, u, f) { var c = parseFloat(n("#slider").attr("data-sliderMinValue")), l = parseFloat(n("#slider").attr("data-sliderMaxValue")), s = i.sliderSelectedFromValue, h = i.sliderSelectedToValue, e = {}, o; return e.CategoryId = t, e.ManufacturerId = r, e.VendorId = u, f != undefined && f.get(0) === n(".priceRangeFilterPanel7Spikes").get(0) && (e.Priority = 1), o = {}, s != undefined && s !== c && (o.From = s.toString()), h != undefined && h !== l && (o.To = h.toString()), e.SelectedPriceRange = o, e.MinPrice = c.toString(), e.MaxPrice = l.toString(), e } function u(t, r) { var u = parseFloat(n("#slider").attr("data-sliderMinValue")), f = parseFloat(n("#slider").attr("data-sliderMaxValue")), e; (t == null || r == null) && (n("#slider").slider("option", "values", [u, f]), i.sliderSelectedFromValue = u, i.sliderSelectedToValue = f, n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(u.toFixed()), n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(f.toFixed())); t == null && r != null && (n("#slider").slider("option", "values", [u, r]), i.sliderSelectedFromValue = u, i.sliderSelectedToValue = r, n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(u.toFixed()), n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(r.toFixed())); t != null && r == null && (n("#slider").slider("option", "values", [t, f]), i.sliderSelectedFromValue = t, i.sliderSelectedToValue = f, n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(t.toFixed()), n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(f.toFixed())); t != null && r != null && (n("#slider").slider("option", "values", [t, r]), i.sliderSelectedFromValue = t, i.sliderSelectedToValue = r, n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(t.toFixed()), n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(r.toFixed())); e = n(".priceRangeFilterPanel7Spikes .title a.clearPriceRangeFilter"); t === u && r === f || t == null && r == null ? e.hide() : e.show() } function f(t, i) { n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(i.values[0].toFixed()); n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(i.values[1].toFixed()) } function e(r, u) { var h = parseFloat(n("#slider").attr("data-sliderMinValue")), c = parseFloat(n("#slider").attr("data-sliderMaxValue")), e = u.values[0], o = u.values[1], s, f; i.sliderSelectedFromValue = e; i.sliderSelectedToValue = o; s = new t; s.requestProductsForSelectedFilters(n(".priceRangeFilterPanel7Spikes")); f = n(".priceRangeFilterPanel7Spikes .title a.clearPriceRangeFilter"); e === h && o === c ? f.hide() : f.show() } function o(i) { var u = i.data.priceRangeFilterManager, r; u.clearPriceRangeFilterControl(); r = new t; r.requestProductsForSelectedFilters(n(".priceRangeFilterPanel7Spikes")) } function s() { n(".priceRangeFilterPanel7Spikes .title a.clearPriceRangeFilter").hide(); var t = n("#slider").slider("option", "min"), r = n("#slider").slider("option", "max"); n("#slider").slider("option", { values: [t, r] }); n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(t.toFixed()); n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(r.toFixed()); i.sliderSelectedFromValue = t; i.sliderSelectedToValue = r } function h() { var i = n("#slider").slider("option", "min"), r = n("#slider").slider("option", "max"), t = n("#slider").slider("option", "values"); return t[0] !== i || t[1] !== r ? !0 : !1 } i.prototype.buildPriceRangeFilterModel = r; i.prototype.SetSliderValues = u; i.prototype.sliderSlide = f; i.prototype.sliderStopped = e; i.prototype.clearPriceRangeFilter = o; i.prototype.clearPriceRangeFilterControl = s; i.prototype.determineIfPriceRangeHasBeenSelected = h; t.prototype.buildPriceRangeFilterModel = (new i).buildPriceRangeFilterModel; t.prototype.SetSliderValues = (new i).SetSliderValues; t.prototype.clearPriceRangeFilterControl = (new i).clearPriceRangeFilterControl; t.prototype.determineIfPriceRangeHasBeenSelected = (new i).determineIfPriceRangeHasBeenSelected; n(document).ready(function () { var t = n("#slider"), f = parseFloat(t.attr("data-sliderMinValue")), e = parseFloat(t.attr("data-sliderMaxValue")), o = t.attr("data-selectedFromValue"), s = t.attr("data-selectedToValue"), r = new i, u; t.slider({ min: f, max: e, range: !0, values: [o, s], slide: r.sliderSlide, stop: r.sliderStopped }); n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(f.toFixed()); n(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(e.toFixed()); u = n(".priceRangeFilterPanel7Spikes .title a.clearPriceRangeFilter"); u.click({ priceRangeFilterManager: r }, r.clearPriceRangeFilter); u.hide() }) }(jQuery, FiltersManager, PriceRangeFilterManager);