@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Services.Configuration
@using Nop.Web.Models.Catalog;
@using Nop.Services.Security;
@{
    Layout = "~/Views/Shared/_Root.Head.cshtml";
}
@{
    var currentStore = EngineContext.Current.Resolve<IStoreContext>().CurrentStore;
    var numberOfItemBoxesClass = EngineContext.Current.Resolve<ISettingService>().GetSettingByKey("brooklynthemesettings.catalogpagesitemboxesperrow", "items-per-row-four", currentStore.Id, true).ToLowerInvariant();

    var homePageCss = String.Empty;
    var controllerName = System.Web.HttpContext.Current.Request.RequestContext.RouteData.GetRequiredString("controller");
    var isHomePage = controllerName.Equals("home", StringComparison.InvariantCultureIgnoreCase);
    if (isHomePage)
    {
        homePageCss = "master-wrapper-home"; 
    }
    
    var productPageLayout = String.Empty;
    if (IsSectionDefined("ProductPage"))
    {
        // Render the empty to avoid an error. We use this section just to know whether we are on the home page or not
        @RenderSection("ProductPage");

        var storeId = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.Id;
        productPageLayout = EngineContext.Current.Resolve<ISettingService>().GetSettingByKey("brooklynthemesettings.productpagelayout", "one-column", storeId, true);
    }

    var permissionService = EngineContext.Current.Resolve<IPermissionService>();
    var shoppingCartEnabled = permissionService.Authorize(StandardPermissionProvider.EnableShoppingCart);
    var wishlistEnabled = permissionService.Authorize(StandardPermissionProvider.EnableWishlist);
}

@Html.Widget("body_start_html_tag_after")
@Html.Partial("_Notifications")
@Html.Action("JavaScriptDisabledWarning", "Common")
@Html.Partial("OldInternetExplorerWarning")

<div class="master-wrapper-page @homePageCss @numberOfItemBoxesClass">
    @*y.chan - custom*@
    @*@Html.Action("AdminHeaderLinks", "Common")*@
    @*y.chan - custom end*@
    @Html.Partial("Header")
    <script type="text/javascript">
        AjaxCart.init(false, '.cart-qty', '.header-links .cart-ttl', '.header-links .wishlist-qty', '#flyout-cart');
    </script>
    <div class="overlayOffCanvas"></div>
    @if (isHomePage)
    {
        @Html.Widget("home_page_main_slider");

        var secondBannerAdditionalCssClass = String.Empty;
        var storeId = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.Id;
        var hideSecondBannerOnMobile = EngineContext.Current.Resolve<ISettingService>().GetSettingByKey("brooklynthemesettings.hidesecondmainslideronmobile", false, storeId, true);
        if (hideSecondBannerOnMobile)
        {
            secondBannerAdditionalCssClass = "hide-banner";
        }

        var homePageLeftBanner = Html.Widget("home_page_left_banner_top");
        var homePageRightBanner = Html.Widget("home_page_right_banner_top");

        if (!MvcHtmlString.IsNullOrEmpty(homePageLeftBanner) && !MvcHtmlString.IsNullOrEmpty(homePageRightBanner))
        {
            <div class="banner-wrapper">
                <div class="main-banner main-banner-1">@homePageLeftBanner</div>
                @*Hide the second banner in the beginning until the correct height is being set. Thus there will be no visible resizing of the image which is annoying*@
                <div style="display: none;" class="main-banner main-banner-2 @secondBannerAdditionalCssClass">@homePageRightBanner</div>
            </div>
        }
        <div class="home-page-welcome-wrapper">
            @Html.Action("TopicBlock", "Topic", new { systemName = "HomePageText" })
        </div>
    }
    <div class="master-wrapper-content @productPageLayout">
        @Html.Widget("content_before")
        @if (IsSectionDefined("Breadcrumb"))
        {
            @RenderSection("Breadcrumb")
        }
        @if (IsSectionDefined("categoryDetails"))
        {
            @RenderSection("categoryDetails")
        }
        <div class="master-column-wrapper">
            @RenderBody()
        </div>
        @Html.Widget("content_after")
    </div>

    @if (isHomePage)
    {
        <div class="outside-back">
            @Html.Action("TopicBlock", "Topic", new { systemName = "HomePageText-Bottom" })
        </div>
    }
    @Html.Action("Footer", "Common")
</div>
@Html.Action("EuCookieLaw", "Common")
@Html.Widget("body_end_html_tag_before")